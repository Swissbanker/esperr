\name{registerRedisEventListener}
\alias{registerRedisEventListener}
%- Also NEED an '\alias' for EACH other topic documented here.
\title{
Register a Redis output event cache
}
\description{
Cache output events generated by the statement in the specified Redis key.
}
\usage{
registerRedisEventListener(statement, key = sub("/", "", tempfile(pattern = "event", tmpdir = "")))
}
%- maybe also 'usage' for other objects documented here.
\arguments{
  \item{statement}{
An Esper EPL statement (from \code{esperStatement}).
}
  \item{key}{
A valid Redis key name (spaces are not allowed).
}
}
\details{
Redis is a high-performance, in-memory networked key/value database.
We use Redis to cache Esper output events for consumption by 
arbitrary Redis clients without message routing.
Use the registerRedisEventListener function to populate
Redis keys with Esper output events. The cached output events may be 
read by any Redis client.
}
\value{
Nothing is returned.
}
\references{
http://cran.r-project.org/web/packages/rredis/index.html
}
\author{
B. W. Lewis
}

%% ~Make other sections like Warning with \section{Warning }{....} ~

\seealso{
\code{\link{esperRedisConnect}}
}
\examples{
\dontrun{
# (Assumes a Redis server is running locally)
require('esperr')
schema <- paste(system.file(package='esperr'),"/schema/sensor.xsd",sep='')
esperXMLEventSchema(schema,'Sensor')
data(sensorXMLEvent)
s <- esperStatement('select ID,Observation.Command from MyEvents')
registerRedisEventListener('sensorEvent')
sendEvent(sensorXMLEvent)
# Redis now contains an output event value in the key name 'sensorEvent'
}
}
